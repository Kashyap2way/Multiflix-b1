{"version":3,"file":"index.js","sourceRoot":"","sources":["../../../../../src/generated/src/models/index.ts"],"names":[],"mappings":"AAAA;;;;;;GAMG;AAiJH,wEAAwE;AACxE,MAAM,CAAN,IAAY,oBAWX;AAXD,WAAY,oBAAoB;IAC9B,iBAAiB;IACjB,iDAAyB,CAAA;IACzB,cAAc;IACd,2CAAmB,CAAA;IACnB,gBAAgB;IAChB,+CAAuB,CAAA;IACvB,aAAa;IACb,yCAAiB,CAAA;IACjB,eAAe;IACf,6CAAqB,CAAA;AACvB,CAAC,EAXW,oBAAoB,KAApB,oBAAoB,QAW/B","sourcesContent":["/*\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nimport * as coreClient from \"@azure/core-client\";\n\n/** Status of the long running operation */\nexport interface EmailSendResult {\n  /** The unique id of the operation. Use a UUID. */\n  id: string;\n  /** Status of operation. */\n  status: EmailSendStatus;\n  /** Error details when status is a non-success terminal state. */\n  error?: ErrorDetail;\n}\n\n/** The error detail. */\nexport interface ErrorDetail {\n  /**\n   * The error code.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly code?: string;\n  /**\n   * The error message.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly message?: string;\n  /**\n   * The error target.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly target?: string;\n  /**\n   * The error details.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly details?: ErrorDetail[];\n  /**\n   * The error additional info.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly additionalInfo?: ErrorAdditionalInfo[];\n}\n\n/** The resource management error additional info. */\nexport interface ErrorAdditionalInfo {\n  /**\n   * The additional info type.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly type?: string;\n  /**\n   * The additional info.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly info?: Record<string, unknown>;\n}\n\n/** Common error response for all Azure Resource Manager APIs to return error details for failed operations. (This also follows the OData error response format.). */\nexport interface ErrorResponse {\n  /** The error object. */\n  error?: ErrorDetail;\n}\n\n/** Message payload for sending an email */\nexport interface EmailMessage {\n  /** Custom email headers to be passed. */\n  headers?: { [propertyName: string]: string };\n  /** Sender email address from a verified domain. */\n  senderAddress: string;\n  /** Email content to be sent. */\n  content: EmailContent;\n  /** Recipients for the email. */\n  recipients: EmailRecipients;\n  /** List of attachments. Please note that we limit the total size of an email request (which includes attachments) to 10MB. */\n  attachments?: EmailAttachment[];\n  /** Email addresses where recipients' replies will be sent to. */\n  replyTo?: EmailAddress[];\n  /** Indicates whether user engagement tracking should be disabled for this request if the resource-level user engagement tracking setting was already enabled in the control plane. */\n  disableUserEngagementTracking?: boolean;\n}\n\n/** Content of the email. */\nexport interface EmailContent {\n  /** Subject of the email message */\n  subject: string;\n  /** Plain text version of the email message. */\n  plainText?: string;\n  /** Html version of the email message. */\n  html?: string;\n}\n\n/** Recipients of the email */\nexport interface EmailRecipients {\n  /** Email To recipients */\n  to?: EmailAddress[];\n  /** Email CC recipients */\n  cc?: EmailAddress[];\n  /** Email BCC recipients */\n  bcc?: EmailAddress[];\n}\n\n/** An object representing the email address and its display name */\nexport interface EmailAddress {\n  /** Email address. */\n  address: string;\n  /** Email display name. */\n  displayName?: string;\n}\n\n/** Attachment to the email. */\nexport interface EmailAttachment {\n  /** Name of the attachment */\n  name: string;\n  /** MIME type of the content being attached. */\n  contentType: string;\n  /** Base64 encoded contents of the attachment */\n  contentInBase64: string;\n}\n\n/** Defines headers for Email_getSendResult operation. */\nexport interface EmailGetSendResultHeaders {\n  /** This header will only be present when the status is a non-terminal status. It indicates the minimum amount of time in seconds to wait before polling for operation status again. */\n  retryAfter?: number;\n}\n\n/** Defines headers for Email_getSendResult operation. */\nexport interface EmailGetSendResultExceptionHeaders {\n  /** Error code - this will be the same as the code in the error property in the response body. */\n  xMsErrorCode?: string;\n}\n\n/** Defines headers for Email_send operation. */\nexport interface EmailSendHeaders {\n  /** Location url of where to poll the status of this operation from. */\n  operationLocation?: string;\n  /** This header will only be present when the operation status is a non-terminal status. It indicates the minimum amount of time in seconds to wait before polling for operation status again. */\n  retryAfter?: number;\n}\n\n/** Defines headers for Email_send operation. */\nexport interface EmailSendExceptionHeaders {\n  /** Error code - this will be the same as the code in the error property in the response body. */\n  xMsErrorCode?: string;\n}\n\n/** Known values of {@link EmailSendStatus} that the service accepts. */\nexport enum KnownEmailSendStatus {\n  /** NotStarted */\n  NotStarted = \"NotStarted\",\n  /** Running */\n  Running = \"Running\",\n  /** Succeeded */\n  Succeeded = \"Succeeded\",\n  /** Failed */\n  Failed = \"Failed\",\n  /** Canceled */\n  Canceled = \"Canceled\"\n}\n\n/**\n * Defines values for EmailSendStatus. \\\n * {@link KnownEmailSendStatus} can be used interchangeably with EmailSendStatus,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **NotStarted** \\\n * **Running** \\\n * **Succeeded** \\\n * **Failed** \\\n * **Canceled**\n */\nexport type EmailSendStatus = string;\n\n/** Optional parameters. */\nexport interface EmailGetSendResultOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the getSendResult operation. */\nexport type EmailGetSendResultResponse = EmailGetSendResultHeaders &\n  EmailSendResult;\n\n/** Optional parameters. */\nexport interface EmailSendOptionalParams extends coreClient.OperationOptions {\n  /** This is the ID provided by the customer to identify the long running operation. If an ID is not provided by the customer, the service will generate one. */\n  operationId?: string;\n  /** Tracking ID sent with the request to help with debugging. */\n  clientRequestId?: string;\n  /** Delay to wait until next poll, in milliseconds. */\n  updateIntervalInMs?: number;\n  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */\n  resumeFrom?: string;\n}\n\n/** Contains response data for the send operation. */\nexport type EmailSendResponse = EmailSendHeaders & EmailSendResult;\n\n/** Optional parameters. */\nexport interface EmailRestApiClientOptionalParams\n  extends coreClient.ServiceClientOptions {\n  /** Api Version */\n  apiVersion?: string;\n  /** Overrides client endpoint. */\n  endpoint?: string;\n}\n"]}